// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		F25A37E2221561E000E24058 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F25A37E1221561E000E24058 /* main.cpp */; };
		F25A37EE2215620400E24058 /* Two Sum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F25A37E82215620400E24058 /* Two Sum.cpp */; };
		F25A37EF2215620400E24058 /* Longest Substring Without Repeating Characters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F25A37EA2215620400E24058 /* Longest Substring Without Repeating Characters.cpp */; };
		F25A37F02215620400E24058 /* Reverse Integer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F25A37EC2215620400E24058 /* Reverse Integer.cpp */; };
		F25A37F12215620400E24058 /* Add Two Numbers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F25A37ED2215620400E24058 /* Add Two Numbers.cpp */; };
		F25A37F322156B8B00E24058 /* CountAndSay.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F25A37F222156B8B00E24058 /* CountAndSay.cpp */; };
		F27A03122219606C0054F77C /* Reverse String.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F27A03112219606C0054F77C /* Reverse String.cpp */; };
		F27A0314221964F00054F77C /* Maximum Depth of Binary Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F27A0313221964F00054F77C /* Maximum Depth of Binary Tree.cpp */; };
		F27A0316221969F50054F77C /* Fizz Buzz.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F27A0315221969F50054F77C /* Fizz Buzz.cpp */; };
		F27A031822196D9F0054F77C /* Binary Tree Inorder Traversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F27A031722196D9F0054F77C /* Binary Tree Inorder Traversal.cpp */; };
		F27A031C221984910054F77C /* Product of Array Except Self.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F27A031B221984910054F77C /* Product of Array Except Self.cpp */; };
		F27A031E221989A70054F77C /* Longest Common Prefix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F27A031D221989A70054F77C /* Longest Common Prefix.cpp */; };
		F2BD3E7E221C27060048E5E8 /* Counting Bits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E7D221C27060048E5E8 /* Counting Bits.cpp */; };
		F2BD3E80221C27150048E5E8 /* Jewels and Stones.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E7F221C27150048E5E8 /* Jewels and Stones.cpp */; };
		F2BD3E82221C350C0048E5E8 /* Number of 1 Bits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E81221C350C0048E5E8 /* Number of 1 Bits.cpp */; };
		F2BD3E84221C378E0048E5E8 /* Single Number.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E83221C378E0048E5E8 /* Single Number.cpp */; };
		F2BD3E8A221C3D570048E5E8 /* Merge Two Sorted Lists.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E89221C3D570048E5E8 /* Merge Two Sorted Lists.cpp */; };
		F2BD3E8C221C41D00048E5E8 /* Merge Sorted Array.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E8B221C41D00048E5E8 /* Merge Sorted Array.cpp */; };
		F2BD3E8E221C46E20048E5E8 /* Hamming Distance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E8D221C46E20048E5E8 /* Hamming Distance.cpp */; };
		F2BD3E90221C4F950048E5E8 /* Merge Two Binary Trees.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E8F221C4F950048E5E8 /* Merge Two Binary Trees.cpp */; };
		F2BD3E92221C4FC60048E5E8 /* Move Zeroes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E91221C4FC60048E5E8 /* Move Zeroes.cpp */; };
		F2BD3E94221C4FD50048E5E8 /* Invert Binary Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E93221C4FD50048E5E8 /* Invert Binary Tree.cpp */; };
		F2BD3E96221C50950048E5E8 /* Find All Numbers Disappeared in an Array.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E95221C50950048E5E8 /* Find All Numbers Disappeared in an Array.cpp */; };
		F2BD3E98221C50D30048E5E8 /* Reverse Linked List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E97221C50D30048E5E8 /* Reverse Linked List.cpp */; };
		F2BD3E9A221C50E00048E5E8 /* Majority Element.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E99221C50E00048E5E8 /* Majority Element.cpp */; };
		F2BD3E9C221C50ED0048E5E8 /* Convert BST to Greater Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E9B221C50ED0048E5E8 /* Convert BST to Greater Tree.cpp */; };
		F2BD3E9E221C51030048E5E8 /* Diameter of Binary Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3E9D221C51030048E5E8 /* Diameter of Binary Tree.cpp */; };
		F2BD3EA2221D49540048E5E8 /* Linked List Cycle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EA1221D49540048E5E8 /* Linked List Cycle.cpp */; };
		F2BD3EA4221D4A1F0048E5E8 /* Min Stack.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EA3221D4A1F0048E5E8 /* Min Stack.cpp */; };
		F2BD3EA6221D4CED0048E5E8 /* Palindrome Linked List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EA5221D4CED0048E5E8 /* Palindrome Linked List.cpp */; };
		F2BD3EA8221D50A80048E5E8 /* Find All Anagrams in a String.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EA7221D50A80048E5E8 /* Find All Anagrams in a String.cpp */; };
		F2BD3EAA221D510E0048E5E8 /* Linked List Cycle II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EA9221D510E0048E5E8 /* Linked List Cycle II.cpp */; };
		F2BD3EAC221D51700048E5E8 /* Delete Node in a Linked List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EAB221D51700048E5E8 /* Delete Node in a Linked List.cpp */; };
		F2BD3EAE221D624B0048E5E8 /* Sqrt(x).cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EAD221D624B0048E5E8 /* Sqrt(x).cpp */; };
		F2BD3EB0221D62620048E5E8 /* Valid Palindrome.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EAF221D62620048E5E8 /* Valid Palindrome.cpp */; };
		F2BD3EB2221D62710048E5E8 /* Reverse Bits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EB1221D62710048E5E8 /* Reverse Bits.cpp */; };
		F2BD3EB4221ED1ED0048E5E8 /* Intersection of Two Linked Lists.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EB3221ED1ED0048E5E8 /* Intersection of Two Linked Lists.cpp */; };
		F2BD3EB6221ED4480048E5E8 /* Shortest Unsorted Continuous Subarray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EB5221ED4480048E5E8 /* Shortest Unsorted Continuous Subarray.cpp */; };
		F2BD3EB8221ED84B0048E5E8 /* Flatten Binary Tree to Linked List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EB7221ED84B0048E5E8 /* Flatten Binary Tree to Linked List.cpp */; };
		F2BD3EBA221EDB8B0048E5E8 /* Symmetric Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EB9221EDB8B0048E5E8 /* Symmetric Tree.cpp */; };
		F2BD3EBC221EDBC90048E5E8 /* Path Sum III.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EBB221EDBC90048E5E8 /* Path Sum III.cpp */; };
		F2BD3EBE221EDBE20048E5E8 /* Subtree of Another Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EBD221EDBE20048E5E8 /* Subtree of Another Tree.cpp */; };
		F2BD3EC0221EDC460048E5E8 /* Valid Parentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F2BD3EBF221EDC460048E5E8 /* Valid Parentheses.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		F25A37DC221561E000E24058 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		F25A37DE221561E000E24058 /* Algorithm */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Algorithm; sourceTree = BUILT_PRODUCTS_DIR; };
		F25A37E1221561E000E24058 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		F25A37E82215620400E24058 /* Two Sum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "Two Sum.cpp"; sourceTree = "<group>"; };
		F25A37EA2215620400E24058 /* Longest Substring Without Repeating Characters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "Longest Substring Without Repeating Characters.cpp"; sourceTree = "<group>"; };
		F25A37EC2215620400E24058 /* Reverse Integer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "Reverse Integer.cpp"; sourceTree = "<group>"; };
		F25A37ED2215620400E24058 /* Add Two Numbers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "Add Two Numbers.cpp"; sourceTree = "<group>"; };
		F25A37F222156B8B00E24058 /* CountAndSay.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = CountAndSay.cpp; sourceTree = "<group>"; };
		F27A03112219606C0054F77C /* Reverse String.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Reverse String.cpp"; sourceTree = "<group>"; };
		F27A0313221964F00054F77C /* Maximum Depth of Binary Tree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Maximum Depth of Binary Tree.cpp"; sourceTree = "<group>"; };
		F27A0315221969F50054F77C /* Fizz Buzz.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Fizz Buzz.cpp"; sourceTree = "<group>"; };
		F27A031722196D9F0054F77C /* Binary Tree Inorder Traversal.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Binary Tree Inorder Traversal.cpp"; sourceTree = "<group>"; };
		F27A031A22196E320054F77C /* Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = Header.h; sourceTree = "<group>"; };
		F27A031B221984910054F77C /* Product of Array Except Self.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Product of Array Except Self.cpp"; sourceTree = "<group>"; };
		F27A031D221989A70054F77C /* Longest Common Prefix.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Longest Common Prefix.cpp"; sourceTree = "<group>"; };
		F2BD3E7D221C27060048E5E8 /* Counting Bits.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Counting Bits.cpp"; sourceTree = "<group>"; };
		F2BD3E7F221C27150048E5E8 /* Jewels and Stones.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Jewels and Stones.cpp"; sourceTree = "<group>"; };
		F2BD3E81221C350C0048E5E8 /* Number of 1 Bits.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Number of 1 Bits.cpp"; sourceTree = "<group>"; };
		F2BD3E83221C378E0048E5E8 /* Single Number.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Single Number.cpp"; sourceTree = "<group>"; };
		F2BD3E89221C3D570048E5E8 /* Merge Two Sorted Lists.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Merge Two Sorted Lists.cpp"; sourceTree = "<group>"; };
		F2BD3E8B221C41D00048E5E8 /* Merge Sorted Array.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Merge Sorted Array.cpp"; sourceTree = "<group>"; };
		F2BD3E8D221C46E20048E5E8 /* Hamming Distance.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Hamming Distance.cpp"; sourceTree = "<group>"; };
		F2BD3E8F221C4F950048E5E8 /* Merge Two Binary Trees.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Merge Two Binary Trees.cpp"; sourceTree = "<group>"; };
		F2BD3E91221C4FC60048E5E8 /* Move Zeroes.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Move Zeroes.cpp"; sourceTree = "<group>"; };
		F2BD3E93221C4FD50048E5E8 /* Invert Binary Tree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Invert Binary Tree.cpp"; sourceTree = "<group>"; };
		F2BD3E95221C50950048E5E8 /* Find All Numbers Disappeared in an Array.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Find All Numbers Disappeared in an Array.cpp"; sourceTree = "<group>"; };
		F2BD3E97221C50D30048E5E8 /* Reverse Linked List.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Reverse Linked List.cpp"; sourceTree = "<group>"; };
		F2BD3E99221C50E00048E5E8 /* Majority Element.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Majority Element.cpp"; sourceTree = "<group>"; };
		F2BD3E9B221C50ED0048E5E8 /* Convert BST to Greater Tree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Convert BST to Greater Tree.cpp"; sourceTree = "<group>"; };
		F2BD3E9D221C51030048E5E8 /* Diameter of Binary Tree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Diameter of Binary Tree.cpp"; sourceTree = "<group>"; };
		F2BD3EA1221D49540048E5E8 /* Linked List Cycle.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Linked List Cycle.cpp"; sourceTree = "<group>"; };
		F2BD3EA3221D4A1F0048E5E8 /* Min Stack.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Min Stack.cpp"; sourceTree = "<group>"; };
		F2BD3EA5221D4CED0048E5E8 /* Palindrome Linked List.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Palindrome Linked List.cpp"; sourceTree = "<group>"; };
		F2BD3EA7221D50A80048E5E8 /* Find All Anagrams in a String.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Find All Anagrams in a String.cpp"; sourceTree = "<group>"; };
		F2BD3EA9221D510E0048E5E8 /* Linked List Cycle II.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Linked List Cycle II.cpp"; sourceTree = "<group>"; };
		F2BD3EAB221D51700048E5E8 /* Delete Node in a Linked List.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Delete Node in a Linked List.cpp"; sourceTree = "<group>"; };
		F2BD3EAD221D624B0048E5E8 /* Sqrt(x).cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Sqrt(x).cpp"; sourceTree = "<group>"; };
		F2BD3EAF221D62620048E5E8 /* Valid Palindrome.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Valid Palindrome.cpp"; sourceTree = "<group>"; };
		F2BD3EB1221D62710048E5E8 /* Reverse Bits.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Reverse Bits.cpp"; sourceTree = "<group>"; };
		F2BD3EB3221ED1ED0048E5E8 /* Intersection of Two Linked Lists.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Intersection of Two Linked Lists.cpp"; sourceTree = "<group>"; };
		F2BD3EB5221ED4480048E5E8 /* Shortest Unsorted Continuous Subarray.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Shortest Unsorted Continuous Subarray.cpp"; sourceTree = "<group>"; };
		F2BD3EB7221ED84B0048E5E8 /* Flatten Binary Tree to Linked List.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Flatten Binary Tree to Linked List.cpp"; sourceTree = "<group>"; };
		F2BD3EB9221EDB8B0048E5E8 /* Symmetric Tree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Symmetric Tree.cpp"; sourceTree = "<group>"; };
		F2BD3EBB221EDBC90048E5E8 /* Path Sum III.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Path Sum III.cpp"; sourceTree = "<group>"; };
		F2BD3EBD221EDBE20048E5E8 /* Subtree of Another Tree.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Subtree of Another Tree.cpp"; sourceTree = "<group>"; };
		F2BD3EBF221EDC460048E5E8 /* Valid Parentheses.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "Valid Parentheses.cpp"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		F25A37DB221561E000E24058 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		F25A37D5221561E000E24058 = {
			isa = PBXGroup;
			children = (
				F25A37E0221561E000E24058 /* Algorithm */,
				F25A37DF221561E000E24058 /* Products */,
			);
			sourceTree = "<group>";
		};
		F25A37DF221561E000E24058 /* Products */ = {
			isa = PBXGroup;
			children = (
				F25A37DE221561E000E24058 /* Algorithm */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		F25A37E0221561E000E24058 /* Algorithm */ = {
			isa = PBXGroup;
			children = (
				F27A031A22196E320054F77C /* Header.h */,
				F25A37E1221561E000E24058 /* main.cpp */,
				F25A37EA2215620400E24058 /* Longest Substring Without Repeating Characters.cpp */,
				F2BD3EA7221D50A80048E5E8 /* Find All Anagrams in a String.cpp */,
				F25A37ED2215620400E24058 /* Add Two Numbers.cpp */,
				F25A37EC2215620400E24058 /* Reverse Integer.cpp */,
				F25A37E82215620400E24058 /* Two Sum.cpp */,
				F25A37F222156B8B00E24058 /* CountAndSay.cpp */,
				F27A03112219606C0054F77C /* Reverse String.cpp */,
				F27A0313221964F00054F77C /* Maximum Depth of Binary Tree.cpp */,
				F27A0315221969F50054F77C /* Fizz Buzz.cpp */,
				F27A031722196D9F0054F77C /* Binary Tree Inorder Traversal.cpp */,
				F27A031B221984910054F77C /* Product of Array Except Self.cpp */,
				F27A031D221989A70054F77C /* Longest Common Prefix.cpp */,
				F2BD3E7D221C27060048E5E8 /* Counting Bits.cpp */,
				F2BD3E7F221C27150048E5E8 /* Jewels and Stones.cpp */,
				F2BD3E81221C350C0048E5E8 /* Number of 1 Bits.cpp */,
				F2BD3E83221C378E0048E5E8 /* Single Number.cpp */,
				F2BD3E89221C3D570048E5E8 /* Merge Two Sorted Lists.cpp */,
				F2BD3E8B221C41D00048E5E8 /* Merge Sorted Array.cpp */,
				F2BD3E8D221C46E20048E5E8 /* Hamming Distance.cpp */,
				F2BD3E8F221C4F950048E5E8 /* Merge Two Binary Trees.cpp */,
				F2BD3E91221C4FC60048E5E8 /* Move Zeroes.cpp */,
				F2BD3E93221C4FD50048E5E8 /* Invert Binary Tree.cpp */,
				F2BD3E95221C50950048E5E8 /* Find All Numbers Disappeared in an Array.cpp */,
				F2BD3E97221C50D30048E5E8 /* Reverse Linked List.cpp */,
				F2BD3E99221C50E00048E5E8 /* Majority Element.cpp */,
				F2BD3EA1221D49540048E5E8 /* Linked List Cycle.cpp */,
				F2BD3EA9221D510E0048E5E8 /* Linked List Cycle II.cpp */,
				F2BD3EA3221D4A1F0048E5E8 /* Min Stack.cpp */,
				F2BD3EA5221D4CED0048E5E8 /* Palindrome Linked List.cpp */,
				F2BD3EAB221D51700048E5E8 /* Delete Node in a Linked List.cpp */,
				F2BD3EAD221D624B0048E5E8 /* Sqrt(x).cpp */,
				F2BD3EAF221D62620048E5E8 /* Valid Palindrome.cpp */,
				F2BD3EB1221D62710048E5E8 /* Reverse Bits.cpp */,
				F2BD3EB5221ED4480048E5E8 /* Shortest Unsorted Continuous Subarray.cpp */,
				F2BD3EBF221EDC460048E5E8 /* Valid Parentheses.cpp */,
				F2BD3EB3221ED1ED0048E5E8 /* Intersection of Two Linked Lists.cpp */,
				F2BD3E9B221C50ED0048E5E8 /* Convert BST to Greater Tree.cpp */,
				F2BD3E9D221C51030048E5E8 /* Diameter of Binary Tree.cpp */,
				F2BD3EB7221ED84B0048E5E8 /* Flatten Binary Tree to Linked List.cpp */,
				F2BD3EB9221EDB8B0048E5E8 /* Symmetric Tree.cpp */,
				F2BD3EBB221EDBC90048E5E8 /* Path Sum III.cpp */,
				F2BD3EBD221EDBE20048E5E8 /* Subtree of Another Tree.cpp */,
			);
			path = Algorithm;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		F25A37DD221561E000E24058 /* Algorithm */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F25A37E5221561E000E24058 /* Build configuration list for PBXNativeTarget "Algorithm" */;
			buildPhases = (
				F25A37DA221561E000E24058 /* Sources */,
				F25A37DB221561E000E24058 /* Frameworks */,
				F25A37DC221561E000E24058 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Algorithm;
			productName = Algorithm;
			productReference = F25A37DE221561E000E24058 /* Algorithm */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		F25A37D6221561E000E24058 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1000;
				ORGANIZATIONNAME = JohnLee;
				TargetAttributes = {
					F25A37DD221561E000E24058 = {
						CreatedOnToolsVersion = 10.0;
					};
				};
			};
			buildConfigurationList = F25A37D9221561E000E24058 /* Build configuration list for PBXProject "Algorithm" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = F25A37D5221561E000E24058;
			productRefGroup = F25A37DF221561E000E24058 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				F25A37DD221561E000E24058 /* Algorithm */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		F25A37DA221561E000E24058 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F25A37EF2215620400E24058 /* Longest Substring Without Repeating Characters.cpp in Sources */,
				F25A37E2221561E000E24058 /* main.cpp in Sources */,
				F2BD3EB0221D62620048E5E8 /* Valid Palindrome.cpp in Sources */,
				F27A031822196D9F0054F77C /* Binary Tree Inorder Traversal.cpp in Sources */,
				F27A03122219606C0054F77C /* Reverse String.cpp in Sources */,
				F25A37F02215620400E24058 /* Reverse Integer.cpp in Sources */,
				F2BD3E92221C4FC60048E5E8 /* Move Zeroes.cpp in Sources */,
				F2BD3E90221C4F950048E5E8 /* Merge Two Binary Trees.cpp in Sources */,
				F2BD3EBA221EDB8B0048E5E8 /* Symmetric Tree.cpp in Sources */,
				F2BD3E8E221C46E20048E5E8 /* Hamming Distance.cpp in Sources */,
				F2BD3E7E221C27060048E5E8 /* Counting Bits.cpp in Sources */,
				F27A031E221989A70054F77C /* Longest Common Prefix.cpp in Sources */,
				F2BD3E80221C27150048E5E8 /* Jewels and Stones.cpp in Sources */,
				F2BD3EAC221D51700048E5E8 /* Delete Node in a Linked List.cpp in Sources */,
				F27A0316221969F50054F77C /* Fizz Buzz.cpp in Sources */,
				F2BD3EA4221D4A1F0048E5E8 /* Min Stack.cpp in Sources */,
				F27A0314221964F00054F77C /* Maximum Depth of Binary Tree.cpp in Sources */,
				F2BD3EAE221D624B0048E5E8 /* Sqrt(x).cpp in Sources */,
				F2BD3E96221C50950048E5E8 /* Find All Numbers Disappeared in an Array.cpp in Sources */,
				F2BD3EA2221D49540048E5E8 /* Linked List Cycle.cpp in Sources */,
				F2BD3EB2221D62710048E5E8 /* Reverse Bits.cpp in Sources */,
				F2BD3EBC221EDBC90048E5E8 /* Path Sum III.cpp in Sources */,
				F2BD3E8C221C41D00048E5E8 /* Merge Sorted Array.cpp in Sources */,
				F2BD3E9C221C50ED0048E5E8 /* Convert BST to Greater Tree.cpp in Sources */,
				F2BD3E8A221C3D570048E5E8 /* Merge Two Sorted Lists.cpp in Sources */,
				F2BD3E9E221C51030048E5E8 /* Diameter of Binary Tree.cpp in Sources */,
				F2BD3E82221C350C0048E5E8 /* Number of 1 Bits.cpp in Sources */,
				F2BD3E94221C4FD50048E5E8 /* Invert Binary Tree.cpp in Sources */,
				F25A37F322156B8B00E24058 /* CountAndSay.cpp in Sources */,
				F2BD3EB4221ED1ED0048E5E8 /* Intersection of Two Linked Lists.cpp in Sources */,
				F27A031C221984910054F77C /* Product of Array Except Self.cpp in Sources */,
				F2BD3EA8221D50A80048E5E8 /* Find All Anagrams in a String.cpp in Sources */,
				F2BD3EBE221EDBE20048E5E8 /* Subtree of Another Tree.cpp in Sources */,
				F2BD3E84221C378E0048E5E8 /* Single Number.cpp in Sources */,
				F25A37F12215620400E24058 /* Add Two Numbers.cpp in Sources */,
				F2BD3EA6221D4CED0048E5E8 /* Palindrome Linked List.cpp in Sources */,
				F25A37EE2215620400E24058 /* Two Sum.cpp in Sources */,
				F2BD3EB6221ED4480048E5E8 /* Shortest Unsorted Continuous Subarray.cpp in Sources */,
				F2BD3EC0221EDC460048E5E8 /* Valid Parentheses.cpp in Sources */,
				F2BD3E9A221C50E00048E5E8 /* Majority Element.cpp in Sources */,
				F2BD3EAA221D510E0048E5E8 /* Linked List Cycle II.cpp in Sources */,
				F2BD3E98221C50D30048E5E8 /* Reverse Linked List.cpp in Sources */,
				F2BD3EB8221ED84B0048E5E8 /* Flatten Binary Tree to Linked List.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		F25A37E3221561E000E24058 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "Mac Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		F25A37E4221561E000E24058 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CODE_SIGN_IDENTITY = "Mac Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
			};
			name = Release;
		};
		F25A37E6221561E000E24058 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = JGRNKP3327;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		F25A37E7221561E000E24058 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = JGRNKP3327;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		F25A37D9221561E000E24058 /* Build configuration list for PBXProject "Algorithm" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F25A37E3221561E000E24058 /* Debug */,
				F25A37E4221561E000E24058 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		F25A37E5221561E000E24058 /* Build configuration list for PBXNativeTarget "Algorithm" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F25A37E6221561E000E24058 /* Debug */,
				F25A37E7221561E000E24058 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = F25A37D6221561E000E24058 /* Project object */;
}
